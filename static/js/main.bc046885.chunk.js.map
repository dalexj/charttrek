{"version":3,"sources":["components/helper.js","components/Map.jsx","App.js","reportWebVitals.js","index.js"],"names":["material","window","THREE","MeshBasicMaterial","color","transparent","highlightmaterial","addBars","threeLayer","data","multiplier","reduce","max","row","height","map","d","bar","toBar","coordinate","radius","topColor","setToolTip","title","showTimeout","eventsPropagation","dx","setInfoWindow","content","description","animationDuration","autoOpenOn","forEach","eventType","on","e","type","this","setSymbol","groupedByDate","bookingData","acc","push","Map","startDate","endDate","valueField","valueIndex","rooms","room_nights","revenue","useState","allTimeData","currentSet","setCurrentSet","useEffect","console","log","maptalks","bearing","center","pitch","zoom","centerCross","doubleClickZoom","baseLayer","TileLayer","urlTemplate","subdomains","attribution","ThreeLayer","forceRenderOnMoving","forceRenderOnRotating","animation","prepareToDraw","gl","scene","camera","light","DirectionalLight","position","set","normalize","add","currentBars","addMesh","config","addTo","params","view","getView","setTimeout","animateTo","duration","easing","remove","dateRange","i","moment","isBefore","format","groupedByZipInRange","date","acc2","zip","Object","keys","key","dataItem","num","removeMesh","mesh","animateShow","id","App","props","state","focusedInput","updateNavSelection","bind","fieldName","setState","icon","tabToggleClass","tabClass","className","href","ref","onClick","src","process","alt","renderNavButton","faCocktail","faBed","faDollarSign","style","backgroundImage","backgroundBlendMode","backgroundColor","backgroundSize","overflow","startDateId","endDateId","localStart","localEnd","onDatesChange","onFocusChange","isOutsideRange","withPortal","onClose","trigger","Date","getFullYear","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc046885.chunk.js","sourcesContent":["let bars = [];\nvar material = new window.THREE.MeshBasicMaterial({\n  color: \"#fff\",\n  transparent: true,\n});\nvar highlightmaterial = new window.THREE.MeshBasicMaterial({\n  color: \"yellow\",\n  transparent: true,\n});\n\nexport function addBars(threeLayer, data) {\n  // normalize max to 1000000\n  const maxHeight = data.reduce((max, row) => (max > row.height ? max : row.height), 1);\n  const multiplier = 1000000 / maxHeight;\n  // console.log(`data: `, data);\n  // if (bars.length) {\n  //   threeLayer.removeMesh(bars);\n  // }\n  bars = data.map(function (d) {\n    // console.log(`d: `, d);\n    const bar = threeLayer.toBar(\n      d.coordinate,\n      {\n        height: d.height * multiplier,\n        radius: 7500,\n        topColor: \"#fff\",\n        // radialSegments: 4\n      },\n      material\n    );\n\n    // tooltip test\n    bar.setToolTip(d.title, {\n      showTimeout: 0,\n      eventsPropagation: true,\n      dx: 10,\n    });\n\n    //infowindow test\n    bar.setInfoWindow({\n      content: d.description,\n      title: d.title,\n      animationDuration: 0,\n      autoOpenOn: false,\n    });\n\n    //event test\n    [\n      \"click\",\n      \"mouseout\",\n      \"mouseover\",\n      \"mousedown\",\n      \"mouseup\",\n      \"dblclick\",\n      \"contextmenu\",\n    ].forEach(function (eventType) {\n      bar.on(eventType, function (e) {\n        // console.log(e.type, e);\n        // console.log(this);\n        if (e.type === \"mouseout\") {\n          this.setSymbol(material);\n        }\n        if (e.type === \"mouseover\") {\n          this.setSymbol(highlightmaterial);\n        }\n      });\n    });\n\n    return bar;\n  });\n  // console.log(`bars.length: `, bars.length);\n  // threeLayer.addMesh(bars);\n  // threeLayer.config(\"animation\", true);\n  return bars;\n}\n","import { useEffect, useState } from \"react\";\n// import data from \"../data/population.json\";\n// import groupByDate from \"../data/grouped_by_date.json\";\nimport bookingData from \"../data/us_data.json\";\nimport moment from \"moment\";\nimport allTimeData from \"../data/all-time-data.json\";\nimport data2014 from \"../data/2014-data.json\";\nimport data2015 from \"../data/2015-data.json\";\nimport data2016 from \"../data/2016-data.json\";\nimport data2017 from \"../data/2017-data.json\";\nimport data2018 from \"../data/2018-data.json\";\nimport data2019 from \"../data/2019-data.json\";\nimport data2020 from \"../data/2020-data.json\";\n\nimport { addBars } from \"./helper\";\n\n// data is structured like this to save file size\n//   0    1     2     3      4            5      6            7        8\n// [ lat, long, city, state, postal_code, rooms, room_nights, revenue, date ]\nconst LAT_INDEX = 0;\nconst LONG_INDEX = 1;\nconst CITY_INDEX = 2;\nconst STATE_INDEX = 3;\nconst POSTAL_CODE_INDEX = 4;\nconst ROOMS_INDEX = 5;\nconst ROOM_NIGHTS_INDEX = 6;\nconst REVENUE_INDEX = 7;\nconst DATE_INDEX = 8;\n\n// const allTimeData = bookingData.reduce((acc, row) => {\n//   const zip = row[POSTAL_CODE_INDEX];\n//   if (acc[zip]) {\n//     acc[zip][ROOMS_INDEX] += row[ROOMS_INDEX];\n//     acc[zip][ROOM_NIGHTS_INDEX] += row[ROOM_NIGHTS_INDEX];\n//     acc[zip][REVENUE_INDEX] += row[REVENUE_INDEX];\n//   } else {\n//     acc[zip] = row;\n//   }\n//   return acc;\n// }, {});\n\nconst groupedByDate = bookingData.reduce((acc, row) => {\n  if (acc[row[DATE_INDEX]]) {\n    acc[row[DATE_INDEX]].push(row);\n  } else {\n    acc[row[DATE_INDEX]] = [row];\n  }\n  return acc;\n}, {});\n\n// const allTimeData = bookingData.reduce((acc, row) => {\n//   const zip = row[POSTAL_CODE_INDEX];\n//   if (acc[zip]) {\n//     acc[zip][ROOMS_INDEX] += row[ROOMS_INDEX];\n//     acc[zip][ROOM_NIGHTS_INDEX] += row[ROOM_NIGHTS_INDEX];\n//     acc[zip][REVENUE_INDEX] += row[REVENUE_INDEX];\n//   } else {\n//     acc[zip] = row;\n//   }\n//   return acc;\n// }, {});\n\n// const groupedByDate = bookingData.reduce((acc, row) => {\n//   if (acc[row[DATE_INDEX]]) {\n//     acc[row[DATE_INDEX]].push(row);\n//   } else {\n//     acc[row[DATE_INDEX]] = [row];\n//   }\n//   return acc;\n// }, {});\n\n// const test = bookingData.reduce((acc, row) => {\n//   const [year, ...rest] = row[DATE_INDEX].split(\"-\");\n//   if (acc[year]) {\n//     acc[year].push(row);\n//   } else {\n//     acc[year] = [row];\n//   }\n\n//   return acc;\n// }, {});\n\n// const byYear = Object.keys(test).reduce((acc, key) => {\n//   // console.log(`row[key]: `, test[key]);\n//   const row = test[key];\n//   acc[key] = row.reduce((memo, r) => {\n//     const zip = r[POSTAL_CODE_INDEX];\n//     if (memo[zip]) {\n//       memo[zip][ROOMS_INDEX] += r[ROOMS_INDEX];\n//       memo[zip][ROOM_NIGHTS_INDEX] += r[ROOM_NIGHTS_INDEX];\n//       memo[zip][REVENUE_INDEX] += r[REVENUE_INDEX];\n//     } else {\n//       memo[zip] = r;\n//     }\n//     return memo;\n//   }, {});\n//   return acc;\n// }, {});\n\n// function intToMoney(num) {\n//   return \"$\" + num / 100;\n// }\nlet map, threeLayer, currentBar;\n\n// const multiplier = 400;\n\nfunction intToMoney(num) {\n  return \"$\" + num / 100;\n}\n\nexport default function Map({ startDate, endDate, valueField }) {\n  const valueIndex = {\n    rooms: ROOMS_INDEX,\n    room_nights: ROOM_NIGHTS_INDEX,\n    revenue: REVENUE_INDEX,\n  }[valueField];\n\n  // const dateRange = [];\n  // if(startDate && endDate) {\n  //   let i = moment(startDate);\n  //   while(i.isBefore(endDate)) {\n  //     dateRange.push(i.format('YYYY-MM-DD'));\n  //     i.add(1, 'd');\n  //   }\n  //   dateRange.push(endDate.format('YYYY-MM-DD'));\n  // }\n\n  const [currentSet, setCurrentSet] = useState(allTimeData);\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n    map = new window.maptalks.Map(\"map\", {\n      bearing: 1.2000000000000455,\n      center: [-100.13678164922533, 51.53768207620098],\n      pitch: 180,\n      zoom: 3.75,\n\n      centerCross: true,\n      doubleClickZoom: false,\n      baseLayer: new window.maptalks.TileLayer(\"tile\", {\n        urlTemplate:\n          \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\",\n        subdomains: [\"a\", \"b\", \"c\", \"d\"],\n        attribution:\n          '&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>',\n      }),\n    });\n\n    // the ThreeLayer to draw buildings\n    threeLayer = new window.maptalks.ThreeLayer(\"t\", {\n      forceRenderOnMoving: true,\n      forceRenderOnRotating: true,\n      animation: true,\n    });\n    threeLayer.prepareToDraw = function (gl, scene, camera) {\n      var light = new window.THREE.DirectionalLight(0xffffff);\n      light.position.set(0, -10, 10).normalize();\n      scene.add(light);\n\n      const currentBars = addBars(threeLayer, allTimeData);\n      // console.log(`barYears.allTimeData: `, barYears.allTimeData);\n      threeLayer.addMesh(currentBars);\n      threeLayer.config(\"animation\", true);\n      setCurrentSet(currentBars);\n    };\n\n    // const data = {\n    //   allTimeData,\n    //   // 2014: data2014,\n    //   // 2015: data2015,\n    //   // 2016: data2016,\n    //   // 2017: data2017,\n    //   // 2018: data2018,\n    //   // 2019: data2019,\n    //   // 2020: data2020,\n    // };\n\n    // Object.keys(data).forEach((key) => {\n    //   barYears[key] = addBars(threeLayer, data[key]);\n    // });\n\n    // threeLayer.addMesh(barYears.allTimeData);\n    // threeLayer.config(\"animation\", true);\n    currentBar = \"allTimeData\";\n\n    threeLayer.addTo(map);\n\n    map.on(\"moveend\", function (params) {\n      // console.log(`params: `, params);\n      const view = map.getView();\n      console.log(`view: `, view);\n    });\n\n    // map.on(\"addlayer\", function (params) {\n    //   console.log(`params: `, params);\n    // });\n\n    changeView();\n\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    const dateRange = [];\n    console.log(`startDate: `, startDate);\n    console.log(`endDate: `, endDate);\n    console.log(`currentSet: `, currentSet);\n    if (startDate && endDate) {\n      let i = moment(startDate);\n      while (i.isBefore(endDate)) {\n        dateRange.push(i.format(\"YYYY-MM-DD\"));\n        i.add(1, \"d\");\n      }\n      dateRange.push(endDate.format(\"YYYY-MM-DD\"));\n      // }\n\n      console.log(`dateRange: `, dateRange);\n\n      const groupedByZipInRange = dateRange.reduce((acc, date) => {\n        if (!groupedByDate[date]) {\n          return acc;\n        }\n        return groupedByDate[date].reduce((acc2, row) => {\n          const zip = row[POSTAL_CODE_INDEX];\n          if (acc2[zip]) {\n            acc2[zip][ROOMS_INDEX] += row[ROOMS_INDEX];\n            acc2[zip][ROOM_NIGHTS_INDEX] += row[ROOM_NIGHTS_INDEX];\n            acc2[zip][REVENUE_INDEX] += row[REVENUE_INDEX];\n          } else {\n            acc2[zip] = row;\n          }\n          return acc2;\n        }, acc);\n      }, {});\n\n      // const dataSet = Object.keys(allTimeData).map(key => allTimeData[key])\n      console.log(\"changed dates\");\n      const set = Object.keys(groupedByZipInRange)\n        .map((key) => groupedByZipInRange[key])\n        .map((dataItem) => ({\n          coordinate: [dataItem[LONG_INDEX], dataItem[LAT_INDEX]],\n          height: dataItem[valueIndex],\n          title: `${dataItem[CITY_INDEX]}, ${dataItem[STATE_INDEX]}, ${dataItem[POSTAL_CODE_INDEX]}`,\n          description: `<div>\n          <div>${dataItem[ROOMS_INDEX]} rooms</div>\n          <div>${dataItem[ROOM_NIGHTS_INDEX]} room nights</div>\n          <div>Revenue: ${intToMoney(dataItem[REVENUE_INDEX])}</div>\n          </div>`,\n          // description: [\n          //   `Bookings: ${dataItem[ROOMS_INDEX]} rooms, ${dataItem[ROOM_NIGHTS_INDEX]} room nights`,\n          //   `Revenue: ${intToMoney(dataItem[REVENUE_INDEX])}`,\n          // ].join(\"\\n\\n\"),\n        }));\n\n      if (threeLayer) {\n        const currentBars = addBars(threeLayer, set);\n        currentSet && threeLayer.removeMesh(currentSet);\n        currentBars.forEach((mesh) => {\n          mesh.animateShow({ duration: 3000 });\n        });\n        threeLayer.addMesh(currentBars);\n        threeLayer.config(\"animation\", true);\n\n        setCurrentSet(currentBars);\n        // console.log(`currentBars: `, currentBars);\n        // writeFileSync(\"test.json\", JSON.stringify(currentBars));\n      }\n    }\n  }, [startDate, endDate, valueField]);\n\n  function changeView() {\n    setTimeout(function () {\n      map.animateTo(\n        {\n          bearing: 1.2000000000000455,\n          center: [-100.13678164922533, 51.53768207620098],\n          pitch: 55.8,\n          zoom: 3.75,\n        },\n        {\n          duration: 15000,\n        }\n      );\n    }, 3000);\n    setTimeout(function () {\n      map.animateTo(\n        {\n          center: [-100.13678164922533, 51.53768207620098],\n          pitch: 55.8,\n          zoom: 3.75,\n          bearing: 360,\n        },\n        {\n          duration: 15000,\n          easing: \"linear\",\n        }\n      );\n    }, 15000);\n    // setTimeout(function () {\n    //   map.animateTo(\n    //     {\n    //       center: [-105.46836312838741, 39.22369865230698],\n    //       zoom: 3.75,\n    //       pitch: 75,\n    //       bearing: 360,\n    //     },\n    //     {\n    //       duration: 15000,\n    //       easing: \"inAndOut\",\n    //     }\n    //   );\n    // }, 29999);\n\n    // setTimeout(function () {\n    //   map.animateTo(\n    //     {\n    //       center: [-100.41125120624997, 39.68378129999999],\n    //       zoom: 3.75,\n    //       pitch: 50,\n    //       bearing: 360,\n    //     },\n    //     {\n    //       duration: 15000,\n    //     }\n    //   );\n    // }, 30000);\n  }\n\n  // const handleYearChange = (e) => {\n  //   const { value } = e.target;\n\n  //   // const newBars = barYears[value];\n  //   // console.log(`byYear[value]: `, byYear[value]);\n  //   // if (value === \"allTime\") {\n  //   //   allTimeData;\n  //   // }\n  //   const data = {\n  //     2013: allTimeData,\n  //     2014: data2014,\n  //     2015: data2015,\n  //     2016: data2016,\n  //     2017: data2017,\n  //     2018: data2018,\n  //     2019: data2019,\n  //     2020: data2020,\n  //   };\n  //   const newBars = addBars(threeLayer, data[value]);\n  //   // };\n  //   threeLayer.removeMesh(barYears[currentBar]);\n  //   threeLayer.addMesh(newBars);\n\n  //   threeLayer.addTo(map);\n  //   newBars.forEach((mesh) => {\n  //     mesh.animateShow({ duration: 3000 });\n  //   });\n  //   currentBar = value;\n  // };\n\n  return (\n    <>\n      <div id=\"map\"></div>\n      {/* <div\n        style={{\n          position: \"absolute\",\n          bottom: 50,\n          left: \"50%\",\n          backgroundColor: \"white\",\n          padding: 16,\n        }}>\n        <input\n          id=\"yearRange\"\n          type=\"range\"\n          name=\"year\"\n          min=\"2013\"\n          max=\"2020\"\n          step=\"1\"\n          onChange={handleYearChange}\n          style={{}}\n          list=\"tickmarks\"\n        />\n        <datalist id=\"tickmarks\">\n          <option value=\"2013\"></option>\n          <option value=\"2014\" label=\"2014\"></option>\n          <option value=\"2015\"></option>\n          <option value=\"2016\"></option>\n          <option value=\"2017\" label=\"2017\"></option>\n          <option value=\"2018\"></option>\n          <option value=\"2019\"></option>\n          <option value=\"2020\" label=\"2020\"></option>\n        </datalist>\n      </div> */}\n    </>\n  );\n}\n","import React, { Component } from \"react\";\nimport { DateRangePicker } from \"react-dates\";\nimport {\n  faBed,\n  faDollarSign,\n  faCocktail,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Popup from \"reactjs-popup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Map from \"./components/Map\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"reactjs-popup/dist/index.css\";\nimport \"react-dates/initialize\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: null,\n      endDate: null,\n      focusedInput: null,\n      valueField: \"rooms\",\n    };\n\n    this.updateNavSelection = this.updateNavSelection.bind(this);\n  }\n\n  updateNavSelection(fieldName) {\n    this.setState({ valueField: fieldName });\n  }\n\n  renderNavButton(icon, title, fieldName) {\n    const tabToggleClass =\n      fieldName === this.state.valueField ? \"tab--active\" : \"tab\";\n    const tabClass = `${tabToggleClass} my-auto d-md-inline-block`;\n\n    return (\n      <a\n        className={tabClass}\n        href=\"#\"\n        ref={fieldName}\n        onClick={() => this.updateNavSelection(fieldName)}>\n        <FontAwesomeIcon icon={icon} />\n        <span className=\"px-2\">{title}</span>\n      </a>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"outer__container\">\n        <nav className=\"site-header sticky-top py-1\">\n          <div className=\"container d-flex flex-column flex-md-row justify-content-between\">\n            <img\n              src={`${process.env.PUBLIC_URL}/HE_Logo_White.png`}\n              alt=\"Hotel Engine logo\"\n              className=\"my-auto d-none d-md-none d-lg-inline-block\"\n            />\n            <img\n              src={`${process.env.PUBLIC_URL}/HE_Badge.png`}\n              alt=\"Hotel Engine logo\"\n              className=\"my-auto d-none d-md-inline-block d-lg-none fixed\"\n            />\n            <h2 className=\"blue-text py-2 d-md-inline-block\">ChartTrek</h2>\n            {this.renderNavButton(faCocktail, \"Bookings\", \"rooms\")}\n            {this.renderNavButton(faBed, \"Room nights\", \"room_nights\")}\n            {this.renderNavButton(faDollarSign, \"Revenue\", \"revenue\")}\n          </div>\n        </nav>\n        <div className=\"map__container\">\n          <Map\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n            valueField={this.state.valueField}\n          />\n        </div>\n        <div\n          style={{\n            backgroundImage: `url(${process.env.PUBLIC_URL}/heroImage.jpg)`,\n            backgroundBlendMode: \"hard-light\",\n            backgroundColor: \"#0c64f2\",\n            backgroundSize: \"cover\",\n            overflow: \"hidden\",\n          }}>\n          <div className=\"m-4 date-picker__container\">\n            <DateRangePicker\n              startDateId=\"startDate\"\n              endDateId=\"endDate\"\n              startDate={this.state.localStart}\n              endDate={this.state.localEnd}\n              onDatesChange={({ startDate, endDate }) => {\n                this.setState({ localStart: startDate, localEnd: endDate });\n              }}\n              focusedInput={this.state.focusedInput}\n              onFocusChange={(focusedInput) => {\n                this.setState({ focusedInput });\n              }}\n              isOutsideRange={() => false}\n              withPortal={true}\n              onClose={({ startDate, endDate }) => {\n                console.log(startDate);\n                console.log(endDate);\n                this.setState({ startDate, endDate });\n              }}\n            />\n          </div>\n          <footer className=\"my-auto py-2\">\n            <p className=\"m-0\">\n              <Popup trigger={<span>Hotel Engine. </span>} position=\"top center\">\n                <div className=\"popup__image\">\n                  <img src={`${process.env.PUBLIC_URL}/maskItSo.png`} alt=\"Picard\" className=\"popup__image\"/>\n                </div>\n              </Popup>\n              <span>&copy; {new Date().getFullYear()}. Created during the 2020 🦠 while wearing </span>\n              <Popup trigger={<span> 😷.</span>} position=\"right center\" id=\"yolo\">\n                YOLO!!!\n              </Popup>\n            </p>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}